// TODO: Q_DECLARE_FLAGS - QFlags<T>

#define __cplusplus 1

#define __STDC__

// Qt
#define Q_DECL_NOTHROW
#define Q_DECL_NOEXCEPT
#define Q_DECL_EQ_DELETE
#define Q_DECL_CONSTEXPR
#define Q_DECL_RELAXED_CONSTEXPR
#define Q_REQUIRED_RESULT
#define QT_ASCII_CAST_WARN
#define QT_DEPRECATED
#define Q_DECL_CONST_FUNCTION
#define QT_PREPEND_NAMESPACE(a) a
#define Q_DECLARE_SHARED(a)

#define QT_FASTCALL
#define Q_DECL_CONST_FUNCTION const

#define Q_SLOTS slots
#define Q_SIGNALS signals

// not yet supported
#define Q_DECL_UNUSED
#define Q_ENUM(a)
// #define Q_FLAGS(a)
// #define Q_PRIVATE_SLOT(a, b)
// #define Q_DECLARE_INTERFACE(a,b)
// #define Q_INTERFACES(a)

// #define Q_OVERRIDE(a)
// #define Q_OS_OS2
// #define Q_NO_USING_KEYWORD
#define Q_DECLARE_PRIVATE(a)
#define Q_DECLARE_TYPEINFO_BODY(TYPE, FLAGS)

// There are symbols in Qt that exist in Debug but
// not in release
#define QT_NO_DEBUG

// #define QT_JAMBI_RUN

// #define std::move(__VA_ARGS__)

// Fix cpptoxml (don't know nullptr)
#define nullptr NULL
#define override

// for QObject::tr function
#define QT_NO_TRANSLATION


#define LQT_OBJECT \
    Q_OBJECT \
public: \
    virtual const QMetaObject *metaObject() const; \
    virtual void *qt_metacast(const char *); \
    virtual int qt_metacall(QMetaObject::Call, int, void **); \
    static inline QString tr(const char *s, const char *c = nullptr, int n = -1); \
    QT_DEPRECATED static inline QString trUtf8(const char *s, const char *c = nullptr, int n = -1); \
private:

#define Q_GADGET \
public: \
    static const QMetaObject staticMetaObject;
